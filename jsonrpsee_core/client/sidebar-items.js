window.SIDEBAR_ITEMS = {"enum":[["CertificateStore","What certificate store to use"],["FrontToBack","Message that the Client can send to the background task."],["IdKind","JSON-RPC request object id data type."],["ReceivedMessage","Message type received from the RPC server. It can either be plain text data, bytes, or `Pong` messages."],["SubscriptionKind","Subscription kind"]],"fn":[["generate_batch_id_range","Generate a range of IDs to be used in a batch request."]],"mod":[["async_client","Abstract async client."]],"struct":[["BatchMessage","Batch request message."],["BatchResponse","Batch response."],["RegisterNotificationMessage","RegisterNotification message."],["RequestIdGuard","Reference counted request ID."],["RequestIdManager","Keep track of request IDs."],["RequestMessage","Request message."],["Subscription","Active subscription on the client."],["SubscriptionMessage","Subscription message."]],"trait":[["ClientT","JSON-RPC client interface that can make requests and notifications."],["MaybeSend","Marker trait to determine whether a type implements `Send` or not."],["SubscriptionClientT","JSON-RPC client interface that can make requests, notifications and subscriptions."],["TransportReceiverT","Transport interface to receive data asynchronous."],["TransportSenderT","Transport interface to send data asynchronous."]],"type":[["BatchEntry","Represent a single entry in a batch response."]]};