window.SIDEBAR_ITEMS = {"attr":[["async_trait",""]],"constant":[["TEN_MB_SIZE_BYTES","Ten megabytes."]],"derive":[["Serialize",""]],"enum":[["JsonValue","Represents any valid JSON value."]],"fn":[["to_json_raw_value","Convert a `T` into a boxed `RawValue`."],["to_json_value","Convert a `T` into `serde_json::Value` which is an enum that can represent any valid JSON data."]],"macro":[["rpc_params","Convert the given values to a [`crate::params::ArrayParams`] as expected by a jsonrpsee Client (http or websocket)."]],"mod":[["client","Shared utilities for `jsonrpsee` clients."],["error","Error type."],["http_helpers","Utility methods relying on hyper"],["id_providers","Subscription ID providers."],["params","RPC Parameters. RPC parameters."],["server","Shared modules for the JSON-RPC servers."],["tracing","Shared tracing helpers to trace RPC calls."],["traits","Traits"]],"struct":[["JsonRawValue","Reference to a range of bytes encompassing a single valid JSON value in the input data."]],"trait":[["DeserializeOwned","A data structure that can be deserialized without borrowing any data from the deserializer."],["Serialize","A data structure that can be serialized into any data format supported by Serde."]],"type":[["Cow","Compact three word `Cow` that puts the ownership tag in capacity. This is a type alias, for documentation see `beef::generic::Cow`."],["RpcResult","JSON-RPC result."]]};