window.SIDEBAR_ITEMS = {"derive":[["NetworkBehaviour","Generates a delegating `NetworkBehaviour` implementation for the struct this is used for. See the trait documentation for better description."]],"enum":[["AddAddressResult","The result of adding an address to an ordered list of addresses with associated scores."],["AddressScore","The “score” of an address w.r.t. an ordered collection of addresses."],["CloseConnection","The options which connections to close."],["ConnectionError","Errors that can occur in the context of an established `Connection`."],["ConnectionHandlerEvent","Event produced by a handler."],["ConnectionHandlerUpgrErr","Error that can happen on an outbound substream opening attempt."],["DialError","The possible failures of dialing."],["KeepAlive","How long the connection should be kept alive."],["NetworkBehaviourAction","An action that a [`NetworkBehaviour`] can trigger in the `Swarm` in whose context it is executing."],["NotifyHandler","The options w.r.t. which connection handler to notify of an event."],["PendingConnectionError","Errors that can occur in the context of a pending `Connection`."],["SwarmEvent","Event generated by the `Swarm`."]],"mod":[["behaviour",""],["dial_opts",""],["dummy",""],["handler","Once a connection to a remote peer is established, a [`ConnectionHandler`] negotiates and handles one or more specific protocols on the connection."],["keep_alive",""]],"struct":[["AddressRecord","An record in a prioritised list of addresses."],["ConnectionCounters","Network connection information."],["ConnectionHandlerSelect","Implementation of [`ConnectionHandler`] that combines two protocols into one."],["ConnectionLimit","Information about a connection limit."],["ConnectionLimits","The configurable connection limits."],["IntoConnectionHandlerSelect","Implementation of `IntoConnectionHandler` that combines two protocols into one."],["NetworkInfo","Information about the connections obtained by [`Swarm::network_info()`]."],["OneShotHandler","A [`ConnectionHandler`] that opens a new substream for each request."],["OneShotHandlerConfig","Configuration parameters for the `OneShotHandler`"],["SubstreamProtocol","Configuration of inbound or outbound substream protocol(s) for a [`ConnectionHandler`]."],["Swarm","Contains the state of the network, plus the way it should behave."],["SwarmBuilder","A [`SwarmBuilder`] provides an API for configuring and constructing a [`Swarm`]."],["SwarmPollParameters","Parameters passed to `poll()`, that the `NetworkBehaviour` has access to."]],"trait":[["ConnectionHandler","A handler for a set of protocols used on a connection with a remote."],["Executor","Implemented on objects that can run a `Future` in the background."],["IntoConnectionHandler","Prototype for a [`ConnectionHandler`]."],["NetworkBehaviour","A [`NetworkBehaviour`] defines the behaviour of the local node on the network."],["PollParameters","Parameters passed to `poll()`, that the `NetworkBehaviour` has access to."]],"type":[["NegotiatedSubstream","Substream for which a protocol has been chosen."],["PendingInboundConnectionError","Errors that can occur in the context of a pending incoming `Connection`."],["PendingOutboundConnectionError","Errors that can occur in the context of a pending outgoing `Connection`."]]};