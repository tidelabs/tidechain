// Copyright 2021-2022 Semantic Network Ltd.
// This file is part of Tidechain.

// Tidechain is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// Tidechain is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with Tidechain.  If not, see <http://www.gnu.org/licenses/>.

//! Autogenerated weights for `pallet_oracle`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-02-05, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `ns3206536`, CPU: `Intel(R) Xeon(R) D-2141I CPU @ 2.20GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("lagoon-dev"), DB CACHE: 1024

// Executed Command:
// target/production/tidechain
// benchmark
// pallet
// --chain=lagoon-dev
// --steps=50
// --repeat=20
// --pallet=*
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --header=./FILE_TEMPLATE
// --output=./runtime/lagoon/src/weights/

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_oracle`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_oracle::WeightInfo for WeightInfo<T> {
	/// Storage: Oracle OracleAccountId (r:1 w:0)
	/// Proof: Oracle OracleAccountId (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: Security CurrentBlockCount (r:1 w:0)
	/// Proof: Security CurrentBlockCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Oracle LastSeen (r:0 w:1)
	/// Proof: Oracle LastSeen (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Oracle OracleStatus (r:0 w:1)
	/// Proof: Oracle OracleStatus (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	fn set_status() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `238`
		//  Estimated: `1026`
		// Minimum execution time: 24_339 nanoseconds.
		Weight::from_parts(24_867_000, 1026)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: Oracle OracleAccountId (r:1 w:1)
	/// Proof: Oracle OracleAccountId (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: Security CurrentBlockCount (r:1 w:0)
	/// Proof: Security CurrentBlockCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Oracle LastSeen (r:0 w:1)
	/// Proof: Oracle LastSeen (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	fn set_account_id() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `238`
		//  Estimated: `1026`
		// Minimum execution time: 25_575 nanoseconds.
		Weight::from_parts(26_357_000, 1026)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: Oracle OracleAccountId (r:1 w:0)
	/// Proof: Oracle OracleAccountId (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: Security CurrentBlockCount (r:1 w:0)
	/// Proof: Security CurrentBlockCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Oracle MarketMakers (r:0 w:1)
	/// Proof: Oracle MarketMakers (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	/// Storage: Oracle LastSeen (r:0 w:1)
	/// Proof: Oracle LastSeen (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	fn add_market_maker() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `238`
		//  Estimated: `1026`
		// Minimum execution time: 27_091 nanoseconds.
		Weight::from_parts(27_801_000, 1026)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: Oracle OracleAccountId (r:1 w:0)
	/// Proof: Oracle OracleAccountId (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: Security CurrentBlockCount (r:1 w:0)
	/// Proof: Security CurrentBlockCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Oracle LastSeen (r:0 w:1)
	/// Proof: Oracle LastSeen (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	fn update_assets_value() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `238`
		//  Estimated: `1026`
		// Minimum execution time: 16_435 nanoseconds.
		Weight::from_parts(18_450_000, 1026)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Oracle OracleAccountId (r:1 w:0)
	/// Proof: Oracle OracleAccountId (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: Security CurrentBlockCount (r:1 w:0)
	/// Proof: Security CurrentBlockCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Oracle MarketMakers (r:0 w:1)
	/// Proof: Oracle MarketMakers (max_values: None, max_size: Some(49), added: 2524, mode: MaxEncodedLen)
	/// Storage: Oracle LastSeen (r:0 w:1)
	/// Proof: Oracle LastSeen (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	fn remove_market_maker() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `238`
		//  Estimated: `1026`
		// Minimum execution time: 29_094 nanoseconds.
		Weight::from_parts(29_935_000, 1026)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: Security ChainStatus (r:1 w:0)
	/// Proof: Security ChainStatus (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: Oracle OracleStatus (r:1 w:0)
	/// Proof: Oracle OracleStatus (max_values: Some(1), max_size: Some(1), added: 496, mode: MaxEncodedLen)
	/// Storage: Oracle OracleAccountId (r:1 w:0)
	/// Proof: Oracle OracleAccountId (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: Oracle Swaps (r:2 w:2)
	/// Proof: Oracle Swaps (max_values: None, max_size: Some(197), added: 2672, mode: MaxEncodedLen)
	/// Storage: Assets Account (r:6 w:6)
	/// Proof: Assets Account (max_values: Some(300000), max_size: Some(118), added: 2593, mode: MaxEncodedLen)
	/// Storage: Assets Asset (r:2 w:2)
	/// Proof: Assets Asset (max_values: None, max_size: Some(210), added: 2685, mode: MaxEncodedLen)
	/// Storage: Sunrise ExchangeRateInTdfy (r:2 w:0)
	/// Proof: Sunrise ExchangeRateInTdfy (max_values: None, max_size: Some(36), added: 2511, mode: MaxEncodedLen)
	/// Storage: System Account (r:3 w:3)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Fees ActiveEra (r:1 w:0)
	/// Proof: Fees ActiveEra (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: Fees CurrentSession (r:1 w:0)
	/// Proof: Fees CurrentSession (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Sunrise Pools (r:1 w:1)
	/// Proof: Sunrise Pools (max_values: Some(1), max_size: Some(319), added: 814, mode: MaxEncodedLen)
	/// Storage: Sunrise Rewards (r:2 w:2)
	/// Proof: Sunrise Rewards (max_values: None, max_size: Some(84), added: 2559, mode: MaxEncodedLen)
	/// Storage: Fees EraTotalFees (r:2 w:2)
	/// Proof: Fees EraTotalFees (max_values: None, max_size: Some(89), added: 2564, mode: MaxEncodedLen)
	/// Storage: Fees SessionTotalFees (r:2 w:2)
	/// Proof: Fees SessionTotalFees (max_values: None, max_size: Some(93), added: 2568, mode: MaxEncodedLen)
	/// Storage: Fees AccountFees (r:2 w:2)
	/// Proof: Fees AccountFees (max_values: None, max_size: Some(53070), added: 55545, mode: MaxEncodedLen)
	/// Storage: Oracle AccountSwaps (r:2 w:2)
	/// Proof: Oracle AccountSwaps (max_values: None, max_size: Some(330050), added: 332525, mode: MaxEncodedLen)
	/// Storage: Security CurrentBlockCount (r:1 w:0)
	/// Proof: Security CurrentBlockCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Oracle LastSeen (r:0 w:1)
	/// Proof: Oracle LastSeen (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	fn confirm_swap() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3706`
		//  Estimated: `834487`
		// Minimum execution time: 325_507 nanoseconds.
		Weight::from_parts(351_868_000, 834487)
			.saturating_add(T::DbWeight::get().reads(32))
			.saturating_add(T::DbWeight::get().writes(25))
	}
}
