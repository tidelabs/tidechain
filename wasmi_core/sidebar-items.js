window.SIDEBAR_ITEMS = {"enum":[["Trap","Error type which can be thrown by wasm code or by host environment."],["TrapCode","Error type which can be thrown by wasm code or by host environment."],["UntypedError","An error that may occur upon encoding or decoding slices of [`UntypedValue`]."],["Value","Runtime representation of a value."],["ValueType","Type of a value."],["VirtualMemoryError","Dummy error for fallible `Vec`-based virtual memory operations."]],"mod":[["memory_units","WebAssembly-specific sizes and units."]],"struct":[["F32","A NaN preserving `f32` type."],["F64","A NaN preserving `f64` type."],["UntypedValue","An untyped [`Value`]."],["VirtualMemory","A virtual memory buffer."]],"trait":[["ArithmeticOps","Arithmetic operations."],["DecodeUntypedSlice","Tuple types that allow to decode a slice of [`UntypedValue`]."],["EncodeUntypedSlice","Tuple types that allow to encode a slice of [`UntypedValue`]."],["ExtendInto","Convert one type to another by extending with leading zeroes."],["Float","Float-point value."],["FromValue","Trait for creating value from a `Value`."],["HostError","Trait that allows the host to return custom error."],["Integer","Integer value."],["LittleEndianConvert","Types that can be converted from and to little endian bytes."],["SignExtendFrom","Sign-extends `Self` integer type from `T` integer type."],["TransmuteInto","Reinterprets the bits of a value of one type as another type."],["TruncateSaturateInto","Convert one type to another by rounding to the nearest integer towards zero."],["TryTruncateInto","Convert one type to another by rounding to the nearest integer towards zero."],["WrapInto","Convert one type to another by wrapping."]]};